### Essa função computa e armazena matrizes, a função principal ''MakeCacheMatrix'' cria uma matriz especial pedida no exercicio proposto.###

makeCacheMatrix <- function(x = matrix()) {
  i <- NULL
  set <- function(y){
    x <<- y
    i <<- NULL
  }
  get <- function()x
  setinv <- function(inverse) i <<- inverse
  getinv <- function() i 
  list(set = set, get = get, 
       setinv = setinv, 
       getinv = getinv)
}

###Já a função abaixo calcula o inverso da matriz retornada pelo '' MakeCacheMatrix''###
cacheSolve <- function(x, ...) {
  i <- x$getinv()
  if(!is.null(j)){
    message("getting cached data")
    return(i)
  }
  mat <- x$get()
  i <- solve(mat,...)
  x$setinv(i)
  i
} 
